#nullable enable
Rocket.Surgery.Extensions.Testing.SourceGenerators.AnalyzerTestResult
Rocket.Surgery.Extensions.Testing.SourceGenerators.AnalyzerTestResult.AnalyzerTestResult(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic!> Diagnostics) -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.AnalyzerTestResult.Diagnostics.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic!>
Rocket.Surgery.Extensions.Testing.SourceGenerators.AnalyzerTestResult.Diagnostics.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.AnalyzerTestResult.EnsureDiagnosticSeverity(Microsoft.CodeAnalysis.DiagnosticSeverity severity = Microsoft.CodeAnalysis.DiagnosticSeverity.Warning) -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeActionTestResult
Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeActionTestResult.Changes.get -> Microsoft.CodeAnalysis.ProjectChanges
Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeActionTestResult.Changes.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeActionTestResult.CodeAction.get -> Microsoft.CodeAnalysis.CodeActions.CodeAction!
Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeActionTestResult.CodeAction.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeActionTestResult.CodeActionTestResult(Microsoft.CodeAnalysis.ProjectChanges Changes, Microsoft.CodeAnalysis.Document! TargetDocument, Microsoft.CodeAnalysis.CodeActions.CodeAction! CodeAction, System.Collections.Immutable.ImmutableDictionary<string!, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Text.TextChange>>! TextChanges) -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeActionTestResult.TargetDocument.get -> Microsoft.CodeAnalysis.Document!
Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeActionTestResult.TargetDocument.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeActionTestResult.TextChanges.get -> System.Collections.Immutable.ImmutableDictionary<string!, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Text.TextChange>>!
Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeActionTestResult.TextChanges.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeFixTestResult
Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeFixTestResult.CodeFixTestResult(System.Collections.Immutable.ImmutableArray<Rocket.Surgery.Extensions.Testing.SourceGenerators.ResolvedCodeFixTestResult!> ResolvedFixes) -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeFixTestResult.ResolvedFixes.get -> System.Collections.Immutable.ImmutableArray<Rocket.Surgery.Extensions.Testing.SourceGenerators.ResolvedCodeFixTestResult!>
Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeFixTestResult.ResolvedFixes.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeMarkup
Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeMarkup.Code.get -> string!
Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeMarkup.CodeMarkup(string! markup) -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeMarkup.Location.get -> Microsoft.CodeAnalysis.Text.TextSpan
Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeMarkup.Trigger.get -> Microsoft.CodeAnalysis.Completion.CompletionTrigger?
Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeRefactoringTestResult
Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeRefactoringTestResult.CodeRefactoringTestResult(System.Collections.Immutable.ImmutableArray<Rocket.Surgery.Extensions.Testing.SourceGenerators.ResolvedCodeRefactoringTestResult!> ResolvedFixes) -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeRefactoringTestResult.ResolvedFixes.get -> System.Collections.Immutable.ImmutableArray<Rocket.Surgery.Extensions.Testing.SourceGenerators.ResolvedCodeRefactoringTestResult!>
Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeRefactoringTestResult.ResolvedFixes.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionItemTestResult
Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionItemTestResult.Change.get -> Microsoft.CodeAnalysis.Completion.CompletionChange!
Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionItemTestResult.Change.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionItemTestResult.CompletionItemTestResult(Microsoft.CodeAnalysis.Completion.CompletionItem! Item, Microsoft.CodeAnalysis.Completion.CompletionDescription! Description, Microsoft.CodeAnalysis.Completion.CompletionChange! Change) -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionItemTestResult.Description.get -> Microsoft.CodeAnalysis.Completion.CompletionDescription!
Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionItemTestResult.Description.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionItemTestResult.Item.get -> Microsoft.CodeAnalysis.Completion.CompletionItem!
Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionItemTestResult.Item.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionListTestResult
Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionListTestResult.CompletionListTestResult(Microsoft.CodeAnalysis.Document! Document, Rocket.Surgery.Extensions.Testing.SourceGenerators.MarkedLocation! MarkedLocation, Microsoft.CodeAnalysis.Completion.CompletionItem? SuggestionModeItem, Microsoft.CodeAnalysis.Text.TextSpan Span, System.Collections.Immutable.ImmutableArray<Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionItemTestResult!> Items) -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionListTestResult.Document.get -> Microsoft.CodeAnalysis.Document!
Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionListTestResult.Document.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionListTestResult.Items.get -> System.Collections.Immutable.ImmutableArray<Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionItemTestResult!>
Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionListTestResult.Items.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionListTestResult.MarkedLocation.get -> Rocket.Surgery.Extensions.Testing.SourceGenerators.MarkedLocation!
Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionListTestResult.MarkedLocation.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionListTestResult.Span.get -> Microsoft.CodeAnalysis.Text.TextSpan
Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionListTestResult.Span.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionListTestResult.SuggestionModeItem.get -> Microsoft.CodeAnalysis.Completion.CompletionItem?
Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionListTestResult.SuggestionModeItem.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionTestResult
Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionTestResult.CompletionLists.get -> System.Collections.Immutable.ImmutableArray<Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionListTestResult!>
Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionTestResult.CompletionLists.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionTestResult.CompletionTestResult(System.Collections.Immutable.ImmutableArray<Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionListTestResult!> CompletionLists) -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContext
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContext.AssemblyLoadContext.get -> System.Runtime.Loader.AssemblyLoadContext!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContext.GenerateAsync() -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults!>!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.AddAdditionalText(string! path, Microsoft.CodeAnalysis.Text.SourceText! source) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.AddAdditionalText(string! path, string! source) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.AddAdditionalTexts(params Microsoft.CodeAnalysis.AdditionalText![]! additionalTexts) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.AddCompilationReferences(params Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults![]! additionalCompilations) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.AddGlobalOption(string! key, string! value) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.AddMarkup(string! name, Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeMarkup! source) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.AddMarkup(string! name, string! source) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.AddOption(Microsoft.CodeAnalysis.AdditionalText! tree, string! key, string! value) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.AddOption(Microsoft.CodeAnalysis.SyntaxTree! tree, string! key, string! value) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.AddOption(string! path, string! key, string! value) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.AddPreprocessorSymbol(params string![]! preprocessorSymbolNames) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.AddReferences(params Microsoft.CodeAnalysis.MetadataReference![]! references) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.AddReferences(params string![]! assemblyNames) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.AddReferences(params System.Reflection.Assembly![]! references) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.AddReferences(params System.Type![]! references) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.AddSource(string! name, Microsoft.CodeAnalysis.Text.SourceText! source) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.AddSource(string! name, string! source) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.AddSources(params Microsoft.CodeAnalysis.Text.SourceText![]! additionalSources) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.AddSources(params string![]! additionalSources) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.Build() -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContext!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.GenerateAsync() -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults!>!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.IgnoreOutputFile(string! path) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.WithAnalyzer(System.Type! type) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.WithAnalyzer<T>() -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.WithAssemblyLoadContext(System.Runtime.Loader.AssemblyLoadContext! assemblyLoadContext) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.WithCodeFix(System.Type! type) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.WithCodeFix<T>() -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.WithCodeRefactoring(System.Type! type) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.WithCodeRefactoring<T>() -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.WithCompletion(System.Type! type) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.WithCompletion<T>() -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.WithDefaultReferences() -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.WithDocumentationMode(Microsoft.CodeAnalysis.DocumentationMode documentationMode) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.WithFeature(string! key, string? value = null) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.WithGenerator(System.Type! type) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.WithGenerator<T>() -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.WithLanguageVersion(Microsoft.CodeAnalysis.CSharp.LanguageVersion languageVersion) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.WithLogger(Microsoft.Extensions.Logging.ILogger! logger) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.WithProjectName(string! projectName) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.WithSourceCodeKind(Microsoft.CodeAnalysis.SourceCodeKind sourceCodeKind) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResult
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResult.Compilation.get -> Microsoft.CodeAnalysis.CSharp.CSharpCompilation!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResult.Compilation.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResult.Diagnostics.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic!>
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResult.Diagnostics.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResult.EnsureDiagnosticSeverity(Microsoft.CodeAnalysis.DiagnosticSeverity severity = Microsoft.CodeAnalysis.DiagnosticSeverity.Warning) -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResult.GeneratorTestResult(Microsoft.CodeAnalysis.CSharp.CSharpCompilation! Compilation, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic!> Diagnostics, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree!> SyntaxTrees) -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResult.SyntaxTrees.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree!>
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResult.SyntaxTrees.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.AnalyzerResults.get -> System.Collections.Immutable.ImmutableDictionary<System.Type!, Rocket.Surgery.Extensions.Testing.SourceGenerators.AnalyzerTestResult!>!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.AnalyzerResults.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.Assembly.get -> System.Reflection.Assembly?
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.Assembly.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.AssertCompilationWasSuccessful() -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.AssertGenerationWasSuccessful() -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.CodeFixResults.get -> System.Collections.Immutable.ImmutableDictionary<System.Type!, Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeFixTestResult!>!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.CodeFixResults.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.CodeRefactoringResults.get -> System.Collections.Immutable.ImmutableDictionary<System.Type!, Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeRefactoringTestResult!>!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.CodeRefactoringResults.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.CompletionsResults.get -> System.Collections.Immutable.ImmutableDictionary<System.Type!, Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionTestResult!>!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.CompletionsResults.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.EnsureDiagnosticSeverity(Microsoft.CodeAnalysis.DiagnosticSeverity severity = Microsoft.CodeAnalysis.DiagnosticSeverity.Warning) -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.FileOptions.get -> System.Collections.Immutable.ImmutableDictionary<string!, System.Collections.Immutable.ImmutableDictionary<string!, string!>!>!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.FileOptions.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.FinalCompilation.get -> Microsoft.CodeAnalysis.CSharp.CSharpCompilation!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.FinalCompilation.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.FinalDiagnostics.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic!>
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.FinalDiagnostics.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.GeneratorTestResults(Rocket.Surgery.Extensions.Testing.SourceGenerators.TestProjectInformation! ProjectInformation, Microsoft.CodeAnalysis.CSharp.CSharpCompilation! InputCompilation, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic!> InputDiagnostics, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree!> InputSyntaxTrees, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.AdditionalText!> InputAdditionalTexts, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions! ParseOptions, System.Collections.Immutable.ImmutableDictionary<string!, string!>! GlobalOptions, System.Collections.Immutable.ImmutableDictionary<string!, System.Collections.Immutable.ImmutableDictionary<string!, string!>!>! FileOptions, System.Collections.Immutable.ImmutableDictionary<System.Type!, Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResult!>! Results, System.Collections.Immutable.ImmutableDictionary<System.Type!, Rocket.Surgery.Extensions.Testing.SourceGenerators.AnalyzerTestResult!>! AnalyzerResults, System.Collections.Immutable.ImmutableDictionary<System.Type!, Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeFixTestResult!>! CodeFixResults, System.Collections.Immutable.ImmutableDictionary<System.Type!, Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeRefactoringTestResult!>! CodeRefactoringResults, System.Collections.Immutable.ImmutableDictionary<System.Type!, Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionTestResult!>! CompletionsResults, System.Collections.Immutable.ImmutableDictionary<string!, Rocket.Surgery.Extensions.Testing.SourceGenerators.MarkedLocation!>! MarkedLocations, Microsoft.CodeAnalysis.CSharp.CSharpCompilation! FinalCompilation, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic!> FinalDiagnostics, System.Reflection.Assembly? Assembly, Microsoft.CodeAnalysis.MetadataReference? MetadataReference) -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.GlobalOptions.get -> System.Collections.Immutable.ImmutableDictionary<string!, string!>!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.GlobalOptions.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.InputAdditionalTexts.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.AdditionalText!>
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.InputAdditionalTexts.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.InputCompilation.get -> Microsoft.CodeAnalysis.CSharp.CSharpCompilation!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.InputCompilation.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.InputDiagnostics.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic!>
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.InputDiagnostics.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.InputSyntaxTrees.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SyntaxTree!>
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.InputSyntaxTrees.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.MarkedLocations.get -> System.Collections.Immutable.ImmutableDictionary<string!, Rocket.Surgery.Extensions.Testing.SourceGenerators.MarkedLocation!>!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.MarkedLocations.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.MetadataReference.get -> Microsoft.CodeAnalysis.MetadataReference?
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.MetadataReference.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.ParseOptions.get -> Microsoft.CodeAnalysis.CSharp.CSharpParseOptions!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.ParseOptions.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.ProjectInformation.get -> Rocket.Surgery.Extensions.Testing.SourceGenerators.TestProjectInformation!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.ProjectInformation.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.Results.get -> System.Collections.Immutable.ImmutableDictionary<System.Type!, Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResult!>!
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.Results.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.TryGetAnalyzerResult(System.Type! type, out Rocket.Surgery.Extensions.Testing.SourceGenerators.AnalyzerTestResult? result) -> bool
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.TryGetAnalyzerResult<T>(out Rocket.Surgery.Extensions.Testing.SourceGenerators.AnalyzerTestResult? result) -> bool
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.TryGetResult(System.Type! type, out Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResult? result) -> bool
Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.TryGetResult<T>(out Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResult? result) -> bool
Rocket.Surgery.Extensions.Testing.SourceGenerators.MarkedLocation
Rocket.Surgery.Extensions.Testing.SourceGenerators.MarkedLocation.Location.get -> Microsoft.CodeAnalysis.Text.TextSpan
Rocket.Surgery.Extensions.Testing.SourceGenerators.MarkedLocation.Location.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.MarkedLocation.MarkedLocation(Microsoft.CodeAnalysis.Text.TextSpan Location, Microsoft.CodeAnalysis.Completion.CompletionTrigger? Trigger) -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.MarkedLocation.Trigger.get -> Microsoft.CodeAnalysis.Completion.CompletionTrigger?
Rocket.Surgery.Extensions.Testing.SourceGenerators.MarkedLocation.Trigger.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.ResolvedCodeFixTestResult
Rocket.Surgery.Extensions.Testing.SourceGenerators.ResolvedCodeFixTestResult.CodeActions.get -> System.Collections.Immutable.ImmutableArray<Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeActionTestResult!>
Rocket.Surgery.Extensions.Testing.SourceGenerators.ResolvedCodeFixTestResult.CodeActions.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.ResolvedCodeFixTestResult.Diagnostic.get -> Microsoft.CodeAnalysis.Diagnostic!
Rocket.Surgery.Extensions.Testing.SourceGenerators.ResolvedCodeFixTestResult.Diagnostic.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.ResolvedCodeFixTestResult.Document.get -> Microsoft.CodeAnalysis.Document!
Rocket.Surgery.Extensions.Testing.SourceGenerators.ResolvedCodeFixTestResult.Document.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.ResolvedCodeFixTestResult.ResolvedCodeFixTestResult(Microsoft.CodeAnalysis.Document! Document, Microsoft.CodeAnalysis.Diagnostic! Diagnostic, System.Collections.Immutable.ImmutableArray<Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeActionTestResult!> CodeActions) -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.ResolvedCodeRefactoringTestResult
Rocket.Surgery.Extensions.Testing.SourceGenerators.ResolvedCodeRefactoringTestResult.CodeActions.get -> System.Collections.Immutable.ImmutableArray<Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeActionTestResult!>
Rocket.Surgery.Extensions.Testing.SourceGenerators.ResolvedCodeRefactoringTestResult.CodeActions.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.ResolvedCodeRefactoringTestResult.Document.get -> Microsoft.CodeAnalysis.Document!
Rocket.Surgery.Extensions.Testing.SourceGenerators.ResolvedCodeRefactoringTestResult.Document.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.ResolvedCodeRefactoringTestResult.MarkedLocation.get -> Rocket.Surgery.Extensions.Testing.SourceGenerators.MarkedLocation!
Rocket.Surgery.Extensions.Testing.SourceGenerators.ResolvedCodeRefactoringTestResult.MarkedLocation.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.ResolvedCodeRefactoringTestResult.ResolvedCodeRefactoringTestResult(Microsoft.CodeAnalysis.Document! Document, Rocket.Surgery.Extensions.Testing.SourceGenerators.MarkedLocation! MarkedLocation, System.Collections.Immutable.ImmutableArray<Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeActionTestResult!> CodeActions) -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.TestProjectInformation
Rocket.Surgery.Extensions.Testing.SourceGenerators.TestProjectInformation.Analyzers.get -> System.Collections.Immutable.ImmutableDictionary<System.Type!, Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!>!
Rocket.Surgery.Extensions.Testing.SourceGenerators.TestProjectInformation.Analyzers.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.TestProjectInformation.CodeFixProviders.get -> System.Collections.Immutable.ImmutableDictionary<System.Type!, Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider!>!
Rocket.Surgery.Extensions.Testing.SourceGenerators.TestProjectInformation.CodeFixProviders.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.TestProjectInformation.CodeRefactoringProviders.get -> System.Collections.Immutable.ImmutableDictionary<System.Type!, Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringProvider!>!
Rocket.Surgery.Extensions.Testing.SourceGenerators.TestProjectInformation.CodeRefactoringProviders.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.TestProjectInformation.CompletionProviders.get -> System.Collections.Immutable.ImmutableDictionary<System.Type!, Microsoft.CodeAnalysis.Completion.CompletionProvider!>!
Rocket.Surgery.Extensions.Testing.SourceGenerators.TestProjectInformation.CompletionProviders.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.TestProjectInformation.IncrementalGenerators.get -> System.Collections.Immutable.ImmutableDictionary<System.Type!, Microsoft.CodeAnalysis.IIncrementalGenerator!>!
Rocket.Surgery.Extensions.Testing.SourceGenerators.TestProjectInformation.IncrementalGenerators.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.TestProjectInformation.Logger.get -> Microsoft.Extensions.Logging.ILogger!
Rocket.Surgery.Extensions.Testing.SourceGenerators.TestProjectInformation.Logger.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.TestProjectInformation.SourceGenerators.get -> System.Collections.Immutable.ImmutableDictionary<System.Type!, Microsoft.CodeAnalysis.ISourceGenerator!>!
Rocket.Surgery.Extensions.Testing.SourceGenerators.TestProjectInformation.SourceGenerators.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.TestProjectInformation.SourceProject.get -> Microsoft.CodeAnalysis.Project!
Rocket.Surgery.Extensions.Testing.SourceGenerators.TestProjectInformation.SourceProject.init -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.TestProjectInformation.TestProjectInformation(Microsoft.Extensions.Logging.ILogger! Logger, Microsoft.CodeAnalysis.Project! SourceProject, System.Collections.Immutable.ImmutableDictionary<System.Type!, Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer!>! Analyzers, System.Collections.Immutable.ImmutableDictionary<System.Type!, Microsoft.CodeAnalysis.ISourceGenerator!>! SourceGenerators, System.Collections.Immutable.ImmutableDictionary<System.Type!, Microsoft.CodeAnalysis.IIncrementalGenerator!>! IncrementalGenerators, System.Collections.Immutable.ImmutableDictionary<System.Type!, Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider!>! CodeFixProviders, System.Collections.Immutable.ImmutableDictionary<System.Type!, Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringProvider!>! CodeRefactoringProviders, System.Collections.Immutable.ImmutableDictionary<System.Type!, Microsoft.CodeAnalysis.Completion.CompletionProvider!>! CompletionProviders) -> void
Rocket.Surgery.Extensions.Testing.SourceGenerators.VerifyGeneratorTextContext
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.Create() -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder.CreateWithoutDefaultReferences() -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.AddCodeFix(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults! context, Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider! provider) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.AddCodeFix<T>(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults! context) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.AddCodeRefactoring(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults! context, Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringProvider! provider) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.AddCodeRefactoring<T>(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults! context) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.AddCompletion(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults! context, Microsoft.CodeAnalysis.Completion.CompletionProvider! provider, char? commitKey = null) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.AddCompletion<T>(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults! context, char? commitKey = null) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.GenerateAnalyzer(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContext! context, System.Type! type) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.AnalyzerTestResult!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.GenerateAnalyzer(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder! builder, System.Type! type) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.AnalyzerTestResult!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.GenerateAnalyzer<T>(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContext! context) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.AnalyzerTestResult!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.GenerateAnalyzer<T>(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder! builder) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.AnalyzerTestResult!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.GenerateCodeFix(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContext! context, System.Type! type) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeFixTestResult!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.GenerateCodeFix(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder! builder, System.Type! type) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeFixTestResult!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.GenerateCodeFix<T>(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContext! context) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeFixTestResult!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.GenerateCodeFix<T>(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder! builder) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeFixTestResult!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.GenerateCodeRefactoring(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContext! context, System.Type! type) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeRefactoringTestResult!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.GenerateCodeRefactoring(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder! builder, System.Type! type) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeRefactoringTestResult!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.GenerateCodeRefactoring<T>(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContext! context) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeRefactoringTestResult!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.GenerateCodeRefactoring<T>(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder! builder) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.CodeRefactoringTestResult!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.GenerateCompletions(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContext! context, System.Type! type, char? commitKey = null) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionTestResult!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.GenerateCompletions(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder! builder, System.Type! type, char? commitKey = null) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionTestResult!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.GenerateCompletions<T>(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContext! context, char? commitKey = null) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionTestResult!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.GenerateCompletions<T>(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder! builder, char? commitKey = null) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.CompletionTestResult!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.GenerateSourceGenerator(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContext! context, System.Type! type) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResult!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.GenerateSourceGenerator(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder! builder, System.Type! type) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResult!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.GenerateSourceGenerator<T>(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContext! context) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResult!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.GenerateSourceGenerator<T>(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextBuilder! builder) -> System.Threading.Tasks.Task<Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResult!>!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContextExtensions.IncludeRelatedType(this Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContext! context, System.Type! type) -> Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestContext!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.implicit operator Microsoft.CodeAnalysis.CSharp.CSharpCompilation!(Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults! results) -> Microsoft.CodeAnalysis.CSharp.CSharpCompilation!
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.implicit operator Microsoft.CodeAnalysis.MetadataReference?(Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults! results) -> Microsoft.CodeAnalysis.MetadataReference?
static Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults.implicit operator System.Reflection.Assembly?(Rocket.Surgery.Extensions.Testing.SourceGenerators.GeneratorTestResults! results) -> System.Reflection.Assembly?
static Rocket.Surgery.Extensions.Testing.SourceGenerators.VerifyGeneratorTextContext.Initialize(bool includeInputs = false, bool includeOptions = true, Microsoft.CodeAnalysis.DiagnosticSeverity diagnosticSeverityFilter = Microsoft.CodeAnalysis.DiagnosticSeverity.Warning) -> void
